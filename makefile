TARGET = $(notdir $(CURDIR))  # Имя целевого файла - имя текущей директории
SRC = $(wildcard *.c)         # Автоматически определяет все файлы .c в текущей директории
OBJ = $(SRC:.c=.o)            # Список объектных файлов, полученных из исходных

CC = gcc                      # Компилятор
CFLAGS = -c                   # Флаги компиляции
LDFLAGS =                     # Флаги линковки

# Управление выполнением действий после сборки
RUN_AFTER_BUILD = true

# Удаление таргет файла после выполнения make
DEL_AFTER_BUILD = true

# Основная цель: создание исполняемого файла из объектных файлов
all: $(TARGET)

# Правило для создания исполняемого файла из объектных файлов
$(TARGET): $(OBJ)
	@$(CC) $(LDFLAGS) -o $@ $^
	@if [ "$(RUN_AFTER_BUILD)" = "true" ]; then echo "Running the executable...\n" && ./$(TARGET); fi
	@if [ "$(DEL_AFTER_BUILD)" = "true" ]; then make clean > /dev/null; fi

# Шаблонное правило для компиляции каждого .c файла в .o файл
%.o: %.c
	@$(CC) $(CFLAGS) -o $@ $<

# Правило для очистки сгенерированных файлов
clean:
	rm -f $(TARGET) $(OBJ)

# Автоматические переменные:
#     $@: Полное имя цели.
#     $^: Список всех зависимостей.
#     $<: Первая зависимость.
